# 6일차
### plot 함수 ###
# 색깔 점 찍기
plot(0,5, pch=8, cex=5, col='sienna1')
plot(0,3, pch=16, cex=7, col='deeppink')
plot(0,1, pch=15, cex=3, col='dodgerblue')

# 0,0 : x, y축 좌표
# pch : 모양
# cex : 사이즈
# col : 색상

# R에서의 색 표현법
# 1) Colors in R
# http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf

# 2) rgb( ) 함수와 "#RRGGBB" HEX코드
rgb(0/255, 70/255, 42/255)
plot(0,0, pch=18, cex=7, col='#00462A')

# 3) RColorBrewer 패키지
# http://colorbrewer2.org/
install.packages('RColorBrewer')
library(RColorBrewer)

# 패키지 내 모든 색상조합 확인  
display.brewer.all() 

# 색상조합 이름 확인 (해당 조합의 9개 색상까지 출력해줌)
brewer.pal(9, 'Set1')
brewer.pal(9, 'Blues')
brewer.pal(9, 'YlGnBu')
brewer.pal(9, 'Spectral')

# ggplot2 패키지를 활용한 시각화
install.packages('ggplot2')
library(ggplot2)

# 데이터 요약/처리를 위한 패키지
library(dplyr)
library(tidyr)
library(gapminder)
data(gapminder)
data1 <- gapminder[gapminder$year=="2007",]

# 실습
# 1. 그래프를 그릴 도화지 세팅
ggplot(data1) +
  aes(x = gdpPercap) + #x축 지정
  aes(y = lifeExp)     #y축 지정

# 한번에 그리기
ggplot(data1, aes(x=gdpPercap,y=lifeExp))

# 2. 그림을 선택
ggplot(data1) +
  aes(x = gdpPercap) + #x축 지정
  aes(y = lifeExp) +   #y축 지정
  geom_point()         #그래프 종류

# 3. 꾸미기
# 자주 쓰는 색들은 따로 뽑아놓고 쓰면 편하다.

# 3-1 색 지정 aes(color = )
ggplot(data1) +
  aes(x = gdpPercap) +   #x축 지정
  aes(y = lifeExp) +     #y축 지정
  geom_point() +         #그래프 종류
  aes(color = continent) #색 지정

# 같은 표현
# geom_point는 +로 연결해서 따로 써주기, 그 안에 컬러정보 넣어줘도 됨
windows() # 그래프 불러올 새창 띄우기
data1 %>% ggplot(aes(x=gdpPercap, y=lifeExp, color=continent)) + geom_point()
data1 %>% ggplot(aes(x=gdpPercap, y=lifeExp)) + geom_point(aes(color=continent))
data1 %>% ggplot(aes(x=gdpPercap, y=lifeExp)) + geom_point(color = "red")

# 불가능 (잘못된 시각화)
# aes 안에 색 정보 넣으면 blue라는 변수로 인식해버림
data1 %>% ggplot(aes(x=gdpPercap, y=lifeExp, color = "blue")) + geom_point()

# fill 파라미터 산점도에서는 적용안됨 (막대그래프에서 사용)
data1 %>% ggplot(aes(x=gdpPercap, y=lifeExp, fill = continent)) + geom_point()

# 3-2 모양 지정 aes(shape = )
ggplot(data1) +
  aes(x = gdpPercap) +     #x축 지정
  aes(y = lifeExp) +       #y축 지정
  geom_point() +           #그래프 종류
  aes(color = continent) + #색 지정
  aes(shape = continent)   #모양 지정

# 같은표현
data1 %>% ggplot(aes(x=gdpPercap, y=lifeExp, color = continent, shape = continent)) + geom_point()
data1 %>% ggplot(aes(x=gdpPercap, y=lifeExp, color = continent)) + geom_point(aes(shape = continent))
data1 %>% ggplot(aes(x=gdpPercap, y=lifeExp)) + geom_point(aes(color = continent, shape = continent))

# 특정모양 지정
data1 %>% ggplot(aes(x=gdpPercap, y=lifeExp, color = continent)) + geom_point(shape = 3)

# 오류 발생 (shape 특정 모양 지정시 geom_point 안에 써줘야 함)
data1 %>% ggplot(aes(x=gdpPercap, y=lifeExp, color = continent, shape = 3)) + geom_point()

# 3-3 크기 지정 aes(size = )
# 범주형 데이터(다른 색), 연속형 데이터(색 진하기)에 따라 색 처리 방식 달라짐

ggplot(data1) +
  aes(x = gdpPercap) +     #x축 지정
  aes(y = lifeExp) +       #y축 지정
  geom_point() +           #그래프 종류
  aes(color = continent) + #색 지정
  aes(shape = continent) + #모양 지정
  aes(size = pop)          #크기 지정

# 같은표현
data1 %>% ggplot(aes(x=gdpPercap, y=lifeExp, color = continent, shape = continent, size = pop)) + geom_point()

# 특정 크기 지정 (aes로 묶어서 사이즈 변경)
data1 %>% ggplot(aes(x=gdpPercap, y=lifeExp, color = continent, shape = continent)) + geom_point(size = 3)

# 3-4 투명도 지정 aes(alpha = )
ggplot(data1) +
  aes(x = gdpPercap) +     #x축 지정
  aes(y = lifeExp) +       #y축 지정
  geom_point() +           #그래프 종류
  aes(color = continent) + #색 지정
  aes(shape = continent) + #모양 지정
  aes(size = pop) +        #크기 지정
  aes(alpha = lifeExp)     #투명도

# 같은표현
data1 %>% ggplot(aes(x=gdpPercap, y=lifeExp, color = continent, shape = continent, size = pop, alpha = lifeExp)) + geom_point()

# 특정 투명도 지정
data1 %>% ggplot(aes(x=gdpPercap, y=lifeExp, color = continent, shape = continent, size = pop)) + geom_point(alpha = 0.7)

### 막대그래프 ###
# 범주형 데이터 시각화에 가장 많이 사용
# 연속형 자료도 구간을 나눠 범주형으로 사용 가능
# 막대그래프 geom_text(aes(label=y축값), vjust=-0.5)
# vjust부분 hjust로 바꿀 수 있음

#1. 도화지 그리기
ggplot(data1) +  
  aes(x = continent) # x축 지정

#2. 그림 그리기
ggplot(data1) +  
  aes(x = continent) + # x축 지정
  geom_bar() # 막대그래프 그리기

#3. 꾸미기  
ggplot(data1) +  
  aes(x = continent) + # x축 지정
  geom_bar() + # 막대그래프 그리기
  aes(fill = continent) # 전체색, color=continent로 안씀

ggplot(data1) +  
  aes(x = continent) + # x축 지정
  geom_bar() + # 막대그래프 그리기
  aes(fill = continent) + # 전체색
  scale_fill_brewer(palette='Spectral') #팔레트 사용하기

# 주의: 막대그래프는 색 지정 파라미터를 color이 아닌 fill 사용
ggplot(data1) +  
  aes(x = continent) + # x축 지정
  geom_bar() + # 막대그래프 그리기
  aes(color = continent)  # 개별색

# x와 y값을 직접 지정해줄 때 : geom_() 안에 stat = "identity" 필수
ggplot(data1) +  
  aes(x = continent) + # x축 지정
  aes(y = lifeExp) + # y축 지정
  geom_bar(stat = "identity") + # 막대그래프 x,y축 
  aes(fill = continent) # 전체색

# 데이터 전처리와 막대 차트 그리기
# 그룹별 평균 시각화 하려면 group_by -> summarise -> dplyr 순으로 사용
data1 %>%
  group_by(continent) %>%
  summarise(mean = mean(lifeExp))

data1 %>%
  group_by(continent) %>%
  dplyr::summarise(mean = mean(lifeExp)) %>%
  ggplot(alpha = 0.7) +  
  aes(x = continent) +  
  aes(y = mean) +
  geom_bar(stat = "identity") +  
  aes(fill = continent)

# TIP: facet_grid로 짧은시간 안에 많은 그래프 그릴수있다.
# 대륙별 기대수명 평균값 그래프를 연도별로 나눠서 볼때
gapminder %>%
  filter(year %in% c(2002,2007)) %>%
  group_by(continent,year) %>%
  summarise(mean = mean(lifeExp)) %>%
  ggplot() +  
  aes(x = continent) +  
  aes(y = mean) +
  geom_bar(stat = "identity") +  
  ##aes(color = continent) +  
  aes(fill = continent) +
  facet_grid(~year) 

# 연습문제
head(insurance)

#1. insurance 데이터에서 region별 charges의 중앙값을 구한후
# 막대그래프를 그리기 (region을 색으로 지정, 투명도는 0.7)
insurance %>% 
  group_by(region) %>% 
  summarise(median = median(charges)) %>% 
  ggplot()+
  aes(x = region, y = median, fill = region)+
  geom_bar(stat = 'identity', alpha = 0.7)

insurance %>% 
  group_by(region) %>% 
  summarise(median=median(charges)) %>% 
  ggplot() +
  aes(x = region) +
  aes(y = median) +
  geom_bar(stat = "identity", alpha = 0.7) +
  aes(fill = region)

#2. insurance 데이터에서 sex, smoker별 charges 중앙값을 구한후 막대그래프 그리기
## x축은 smoker이며 sex를 색으로 구분, 투명도는 0.7

insurance %>% 
  group_by(sex, smoker) %>% 
  summarise(median = median(charges)) %>% 
  ggplot()+
  aes(x = smoker, y = median, fill = sex)+
  geom_bar(stat = 'identity', alpha = 0.7)+
  facet_grid(~sex)

# x축 값(smoker여부)에 대한 변수(sex) 구성을 각 막대그래프로 볼수있음(방법1)
insurance %>% 
  group_by(sex, smoker) %>% 
  summarise(median = median(charges)) %>% 
  ggplot() +
  aes(x = smoker) +
  aes(y = median) +
  geom_bar(stat = "identity", alpha = 0.7) +
  aes(fill = sex) +
  facet_grid(~sex)

# x축 값(smoker여부)에 대한 변수(sex) 구성을 각 막대그래프로 볼수있음(방법2)
# position = "dodge" 파라미터를 통해 그래프가 겹치지 않고 나란히 보이게 할 수 있다
insurance %>% 
  group_by(sex, smoker) %>% 
  summarise(median = median(charges)) %>% 
  ggplot(aes(x=smoker, y=median, fill=sex))+
  geom_bar(stat="identity", position="dodge", alpha = 0.7)

# x축 값(smoker여부)에 대한 변수(sex) 구성을 누적그래프 형태로 볼수있음
insurance %>% 
  group_by(sex, smoker) %>% 
  summarise(median = median(charges)) %>% 
  ggplot(aes(x=smoker, y=median, fill=sex))+
  geom_bar(stat="identity")

### 박스플랏 ###
# 데이터의 분포, 이상치 확인 가능
# 주의! 데이터를 펼쳐서 보는것이므로 요약한 데이터를 보지 않음
gapminder %>%
  ggplot(aes(x=continent, y= lifeExp)) + 
  geom_boxplot()

gapminder %>%
  ggplot(aes(x=continent, y= lifeExp, fill= continent)) + 
  geom_boxplot()

gapminder %>%
  ggplot(aes(x=continent, y= lifeExp, fill= continent)) + 
  geom_boxplot(alpha = 0.5)

### 히스토그램 ###
# binswidth 수치를 다르게 하여 범위를 넓히거나 좁히면 그림이 바뀔 수 있음
# 직관적으로 박스플랏보다 이해하기는 쉬우나 주관적 해석이 들어갈수있음
gapminder %>%
  ggplot(aes(x=lifeExp)) + 
  geom_histogram(binwidth = 5, fill="white", color="black")

gapminder %>%
  ggplot(aes(x=lifeExp)) + 
  geom_histogram() +
  facet_grid(~continent)

### 선 그래프 ###
gapminder %>%
  group_by(year) %>%
  summarise(mean = mean(lifeExp))

gapminder %>%
  group_by(year) %>%
  dplyr::summarise(mean = mean(lifeExp)) %>%
  ggplot(aes(x=year,y=mean)) + geom_line()

# 여러 그룹을 그리고 싶을 경우 : aes 안에 그룹 지정
gapminder %>%
  group_by(year,continent) %>%
  summarise(mean = mean(lifeExp))

gapminder %>%
  group_by(year,continent) %>%
  dplyr::summarise(mean = mean(lifeExp)) %>%
  ggplot(aes(x=year, y=mean, group=continent, color= continent)) + geom_line()

# 연습문제
#1 insurance데이터에서 children이 0보다 크면 1, 0이면 0인 변수 ch_data 만들기
head(insurance)
insurance <- insurance %>% 
  mutate(ch_data = ifelse(children>0, 1, 0))

#2 insurance데이터를 활용해서 박스플랏 그리기
## x축은 region y축은 charges이며 ch_data를 색으로 구분
# ch_data가 0,1 값이므로 factor형으로 바꾸지 않으면 그래프 색 적용이 안됨
str(insurance)

#이렇게 factor형으로 만들어 놓고 그리면
insurance$ch_data<-as.factor(insurance$ch_data)
insurance %>% 
  ggplot()+
  aes(x = region, y = charges, fill = ch_data)+
  geom_boxplot()

#아래처럼 factor로 다시 안 감싸줘도 됨
insurance %>% 
  ggplot(aes(x=region, y=charges, fill=factor(ch_data))) +
           geom_boxplot()

#3 insurance데이터를 활용해서 히스토그램 그리기
## x축은 charges, ch_data를 색으로 구분
## region별로 구분해서 4개의 그래프로 표현

insurance %>% 
  ggplot(aes(x=charges, fill=factor(ch_data))) +
  geom_histogram() +
  facet_grid(~region)

#4 insurance데이터를 활용해서 막대그래프 그리기
# x축은 region y축은 charges이며 ch_data를 색으로 구분
# (누적 막대그래프와 ch_data별 비교 막대그래프)
insurance %>%
  ggplot(aes(x=region, y=charges, fill=factor(ch_data))) +
  geom_bar(stat="identity")

insurance %>%
  ggplot(aes(x=region, y=charges, fill=factor(ch_data))) +
  geom_bar(stat="identity",position = "dodge")

insurance %>% 
  ggplot(aes(x=region, y=charges, fill=factor(ch_data))) +
  geom_bar(stat="identity", position="dodge", color="black")

## 이렇게 mean이나 median을 해서 그래프로 그리는게 맞지 않나!
insurance %>%
  group_by(region, ch_data) %>% 
  summarise(median=median(charges)) %>% 
  ggplot(aes(x=region, y=median, fill=ch_data))+
  geom_bar(stat="identity", position="dodge")
  
# TIP : 숫자 전체 자리수 표기
options("scipen" = 100)

### 테마 변경하기 ###
library(ggthemes)

# Classic Theme
ggplot(HR,aes(x=salary)) +  
  geom_bar(aes(fill=salary)) +
  theme_classic()

# BW Theme
ggplot(HR,aes(x=salary)) +  
  geom_bar(aes(fill=salary)) +
  theme_bw()

Graph = ggplot(HR,aes(x=salary)) +  
  geom_bar(aes(fill=salary)) 

## 패키지를 통한 다양한 테마 변경
Graph + theme_bw() + ggtitle("Theme_bw") 
Graph + theme_classic() + ggtitle("Theme_classic") 
Graph + theme_dark() + ggtitle("Theme_dark") 
Graph + theme_light() + ggtitle("Theme_light")  

Graph + theme_linedraw() + ggtitle("Theme_linedraw") 
Graph + theme_minimal() + ggtitle("Theme_minimal") 
Graph + theme_test() + ggtitle("Theme_test") 
Graph + theme_void() + ggtitle("Theme_vold") 

### 범례제목 수정 ###
ggplot(HR,aes(x=salary)) +  
  geom_bar(aes(fill=salary)) +
  theme_bw() +
  labs(fill = "범례 제목 수정(fill)")

# 범례 테두리 설정
Graph + theme(legend.position = "top")
Graph + theme(legend.position = "bottom")
Graph + theme(legend.position = c(0.9,0.7))
Graph + theme(legend.position = 'none')

### 축 변경 ###
# 이산형 - discrete(), scale_x_discrete 함수로 범위 설정
# 연속형 - continuous(), scale_y_continuous 함수로 범위 설정

ggplot(HR,aes(x = salary)) +  
  geom_bar(aes(fill = salary)) +
  theme_bw() +
  scale_x_discrete(labels = c("하","중","상")) +
  scale_y_continuous(breaks = seq(0,8000,by = 1000))

ggplot(HR,aes(x = salary)) +  
  geom_bar(aes(fill = salary)) +
  theme_bw() +
  scale_x_discrete(labels = c("하","중","상")) +
  scale_y_continuous(breaks = seq(0,8000,by = 1000)) +
  scale_fill_discrete(labels = c("하","중","상"))  #범례까지 같이 수정

# Y축 값을 부적절하게 지정하면 그래프가 잘리거나 비율이 안맞다
ggplot(HR,aes(x = salary)) +  
  geom_bar(aes(fill = salary)) +
  theme_bw() +
  ylim(0,5000)

ggplot(HR,aes(x = salary)) +  
  geom_bar(aes(fill = salary)) +
  theme_bw() +
  ylim(0,13000)

### 색 변경 ###
# scale_fill_manual 함수로 범주형 변수 각각 색을 지정해줄 수 있다
ggplot(HR,aes(x = salary)) +  
  geom_bar(aes(fill = salary)) +
  theme_bw() +
  scale_fill_manual(values = c('red','royalblue','tan')) 

ggplot(HR,aes(x = salary)) +  
  geom_bar(aes(fill = salary), alpha = 0.5) +
  theme_bw() +
  scale_fill_manual(values = c('red','royalblue','tan')) 

### 글자크기,각도 수정 ###
# coord_flip() : x <-> y축 대칭 그래프
# theme_bw : 글자체 수정
# angle = 90 : 데이터가 너무 많을때 90도 기울여서 표시
# legend.position : 범례를 둘건지 지울건지

ggplot(HR,aes(x = salary)) +  
  geom_bar(aes(fill = salary), alpha = 0.4) +
  theme_bw() +
  scale_fill_manual(values = c('red','royalblue','tan')) +
  coord_flip()

ggplot(HR,aes(x = salary)) +  
  geom_bar(aes(fill = salary)) +
  theme_bw() +
  scale_fill_manual(values = c('red','royalblue','tan'))  +
  coord_flip() +
  theme(legend.position = 'right',  #'none' 설정하면 없앨 수 있음
        axis.text.x = element_text(size = 10, angle = 0),
        axis.text.y = element_text(size = 10),
        legend.text = element_text(size = 10))

# 그래프에 평행선, 수직선, 대각선을 그릴 수 있는 명령어 (참조선 용도)
# vline : 수직선 / hline : 수평선 / abline : 기울기 있는 선

ggplot(NULL) +
  geom_vline(xintercept = 10, 
             col = 'royalblue', size = 2) +
  geom_hline(yintercept = 10, linetype = 'dashed', 
             col = 'royalblue', size = 2) +
  geom_abline(intercept = 0, slope = 1, col = 'red',
              size = 2) +
  theme_bw()

### 열지도(heatmap) ###
# 범주형 데이터 2개를 사용한 
head(insurance)
summary(insurance)

agg2 = insurance %>% 
  mutate(bmi_grp = cut(bmi, 
                       breaks=c(0,30,35,40,60), 
                       labels=c('G1','G2','G3','G4'))) %>% 
  group_by(region, bmi_grp) %>% 
  summarise(Q90 = quantile(charges, 0.9))

# TIP : quantile( , q) : q*100% 값 계산
quantile(iris$Sepal.Width, 0.5) # 중위수
quantile(iris$Sepal.Width, 0.7) # 70% 

agg2 %>% 
  ggplot(aes(x=region, y=bmi_grp, fill=Q90)) +
  geom_tile()

# 색상 지정  
agg2 %>% 
  ggplot(aes(x=region, y=bmi_grp, fill=Q90)) +
  geom_tile() +
  scale_fill_gradient(low='white', high='#FF6600')

agg2 %>% 
  ggplot(aes(x=region, y=bmi_grp, fill=Q90)) +
  geom_tile() +
  scale_fill_distiller(palette='YlGnBu')
